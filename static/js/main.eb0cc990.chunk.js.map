{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalContext.js","components/Balance.js","components/IncomeExpense.js","components/Transactions.js","components/TransactionList.js","components/TransactionForm.js","App.js","index.js"],"names":["Header","state","action","type","transaction","filter","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","createTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpense","amounts","income","expense","className","Transactions","sign","Math","abs","onClick","TransactionList","key","TransactionForm","useState","setItem","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","autoComplete","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb0cc990.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) =>{\r\n    switch(action.type){\r\n        case 'Delete_Transaction':\r\n        return{\r\n            ...state,\r\n            transaction: state.transaction.filter(transaction => transaction.id !== action.payload)\r\n        }\r\n        case 'Create_Transaction':\r\n        return{\r\n            ...state,\r\n            transaction: [action.payload, ...state.transaction]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext , useReducer } from 'react'\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n//initial state\r\nconst initialState={\r\n    transaction:[]\r\n}\r\n\r\n// createContext\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n\r\n//useReducer,provide component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n    //Action,Delete Transactions from the list\r\n        function deleteTransaction(id) {\r\n            dispatch({\r\n                type:'Delete_Transaction',\r\n                payload:id\r\n            });\r\n        }\r\n        //Create Transactions from the list\r\n        function createTransaction(transaction) {\r\n            dispatch({\r\n                type:'Create_Transaction',\r\n                payload:transaction\r\n            });\r\n        }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transaction: state.transaction,\r\n        deleteTransaction,\r\n        createTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>\r\n\r\n    )\r\n}","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalContext';\r\n\r\nexport const Balance = () => {\r\n    const { transaction } = useContext(GlobalContext);\r\n    const amounts = transaction.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    return (\r\n        <div>\r\n            <h4>Your Balance</h4>\r\n    <h1 id=\"balance\">₹{total}</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalContext';\r\n\r\nexport const IncomeExpense = () => {\r\n  const { transaction } = useContext(GlobalContext);\r\n  const amounts = transaction.map(transaction => transaction.amount);\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1)\r\n    .toFixed(2);\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p className=\"money plus\">₹{income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p className=\"money minus\">₹{expense}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalContext';\r\n\r\n\r\nexport const Transactions = ({ transaction }) => {\r\n    const{deleteTransaction } = useContext(GlobalContext);\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.item} <span>{sign}₹{Math.abs(transaction.amount)}</span>\r\n            <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalContext';\r\nimport {Transactions} from './Transactions'\r\n\r\nexport const TransactionList = () => {\r\n    const { transaction } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                { transaction.map(transaction =>( <Transactions key={transaction.id} transaction={transaction} /> )) }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState,useContext } from 'react'\r\nimport {GlobalContext} from '../context/GlobalContext';\r\n\r\nexport const TransactionForm = () => {\r\n    const{createTransaction } = useContext(GlobalContext);\r\n    const [item,setItem]=useState('');\r\n    const [amount,setAmount]=useState(0);\r\n\r\n    const onSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            item,\r\n            amount: +amount\r\n        }\r\n        createTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" id=\"text\" value={item} onChange={(e) => setItem(e.target.value)} placeholder=\"Enter item...\" autoComplete='off' />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount <br />(negative - expense, positive - income)</label>\r\n          <input type=\"number\" id=\"amount\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" autoComplete='off' />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpense } from './components/IncomeExpense';\nimport { TransactionList } from './components/TransactionList';\nimport { TransactionForm } from './components/TransactionForm';\nimport {GlobalProvider} from './context/GlobalContext';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpense />\n        <TransactionList />\n        <TransactionForm />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}